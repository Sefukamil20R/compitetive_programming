class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
      count = 0
          window_sum = sum(arr[:k])
          if window_sum / k >= threshold:
              count += 1
      
          for i in range(k, len(arr)):
              window_sum += arr[i] - arr[i-k]
              if window_sum / k >= threshold:
                  count += 1
      
          return count
or 
 class Solution:
def numOfSubarrays(self, arr: List[int], k: int, threshold: int) -> int:
        res=0
        currentsum=sum(arr[:k-1])
        for i in range(len(arr)-k+1):
            currentsum +=arr[i+k-1]
            if (currentsum/k)>=threshold:
                  res+=1
            currentsum-=arr[i]
        return res
