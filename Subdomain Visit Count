class Solution:
    def subdomainVisits(self, cpdomains: List[str]) -> List[str]:
         cp = defaultdict(int)
         for cpdomain in cpdomains:
            current = cpdomain.split(" ")
            counter=int(current[0])
            domain=current[1]
            currentdomain = ""
            for sub in domain.split(".")[::-1]:
                 if currentdomain =="":
                     currentdomain = sub
                 else :
                     currentdomain = sub +"."+ currentdomain
                 cp[currentdomain]+=(counter)
         results=[]
         for key in cp.keys():
            results.append(str(cp[key]) + " " +key)      
         return results  
